name: bridge

services:
    redis:
        image: redis:latest
        container_name: redis
        ports:
            - "6379:6379"
        expose:
            - "6379"

    mongo-setup:
        container_name: mongo-setup
        image: mongo
        restart: on-failure
        networks:
            default:
        volumes:
            - ./scripts:/scripts
        entrypoint: ["/scripts/setup.sh"]
        depends_on:
            - mongo1
            - mongo2
            - mongo3

    mongo1:
        hostname: mongo1
        container_name: localmongo1
        image: mongo
        expose:
            - "27017"
        ports:
            - "27017:27017"
        restart: always
        entrypoint:
            [
                "mongod",
                "--replSet",
                "rs0",
                "--bind_ip_all",
                "--dbpath",
                "/data/db",
                "--oplogSize",
                "128",
            ]
        volumes:
            - ./mongodb/mongo/data1/db:/data/db
            # - ./mongodb/mongo/data1/configdb:/data/configdb
    mongo2:
        hostname: mongo2
        container_name: localmongo2
        image: mongo
        expose:
            - "27017"
        ports:
            - "27018:27017"
        restart: always
        entrypoint:
            [
                "mongod",
                "--replSet",
                "rs0",
                "--bind_ip_all",
                "--dbpath",
                "/data/db",
                "--oplogSize",
                "128",
            ]
        volumes:
            - ./mongodb/mongo/data2/db:/data/db
            # - ./mongodb/mongo/data2/configdb:/data/configdb
    mongo3:
        hostname: mongo3
        container_name: localmongo3
        image: mongo
        expose:
            - "27017"
        ports:
            - "27019:27017"
        restart: always
        entrypoint:
            [
                "mongod",
                "--replSet",
                "rs0",
                "--bind_ip_all",
                "--dbpath",
                "/data/db",
                "--oplogSize",
                "128",
            ]
        volumes:
            - ./mongodb/mongo/data3/db:/data/db
            # - ./mongodb/mongo/data3/configdb:/data/configdb

    kafka:
        image: apache/kafka:latest
        container_name: kafka
        ports:
            - "9092:9092"
        expose:
            - "9092"
        environment:
            KAFKA_NODE_ID: 1
            KAFKA_PROCESS_ROLES: broker,controller
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_NUM_PARTITIONS: 3

    celery:
        build:
            context: ../server
            dockerfile: ./Dockerfile.celery

        depends_on:
            - redis

    app:
        container_name: bridge-server
        build:
            context: ../server
            dockerfile: ./Dockerfile
        ports:
            - "8000:8000"
        volumes:
            - ../server/app:/server/app

        command:
            [
                "uv",
                "run",
                "uvicorn",
                "app.main:app",
                "--host",
                "0.0.0.0",
                "--port",
                "8000",
                "--reload",
                "--reload-dir",
                "/server/app",
            ]
        depends_on:
            - redis
            - mongo-setup
            - kafka
